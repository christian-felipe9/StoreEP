@model DetalheProdutoViewModels
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    bool usuarioLogado = SignInManager.IsSignedIn(User);
}
@section styles{
    <style>
        .aval {
            border: 1px solid #5cb85c;
            margin: 0 30px 10px 0;
            border-radius: 4px;
        }

        .resp {
            border: 1px solid #5cb895;
            margin: 0 0 10px 30px;
            border-radius: 4px;
        }

        .row {
            margin: 0;
        }

        .panel-group {
            margin: 4px 0 4px 0;
        }

        #btn_comprar {
            margin: 4px 0 4px 0;
        }

        #btn_add_carrinho {
            margin: 4px 0 4px 0;
            color: #5cb85c;
            background: white;
        }

        #btn_avaliacoes, #btn_historico_preco {
            color: #5cb85c;
            border: 2px solid;
            font-family: monospace;
        }
    </style>
}
@if (TempData["mensagem"] != null)
{
    <div class="alert alert-info">
        <strong>@TempData["mensagem"]</strong>
    </div>
}
<div class="row">
    <hr />
    @Html.Partial("_SliderImagensPartial", Model.Produto)
    <hr />
    <div class="col col-sm-4 col-lg-offset-1">
        <div class="panel-group">
            <div class="panel panel-success">
                <div class="panel-heading">Detalhes</div>
                <div class="panel-body">
                    <h3>@Model.Produto.Nome</h3>
                    <div class="col">
                        <del>
                            <span>@((Model.Produto.Preco * 1.1M).ToString("c"))</span>
                        </del>
                    </div>
                    <div class="col">
                        <h2>@Model.Produto.Preco.ToString("c")</h2>
                    </div>
                    <div class="col">
                        <span class="text-success">10x </span>
                        <span class="text-success">@((Model.Produto.Preco / 10M).ToString("c"))</span>
                        <span class="text-success"> sem juros</span>
                    </div>
                    <div class="row">
                        <div class="form-group col-sm-8">
                            <label style="margin: 30px 0;">Quantidade em estoque: </label>
                            <span>@Model.Produto.Quantidade</span>
                        </div>
                        <div class="form-group col-sm-4">
                            <div class="form-group">
                                <label asp-for="Produto.Quantidade" class="col-form-label"></label>
                                <input asp-for="Produto.Quantidade" class="form-control" value="0" />
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <a id="btn_comprar" asp-action="Adicionar" asp-controller="Carrinho" asp-route-produtoID="@Model.Produto.ProdutoID" class="btn btn-sm btn-success btn-group-justified btn-comprar">Comprar</a>
                    </div>
                    <div class="row">
                        <a id="btn_add_carrinho" asp-action="Adicionar" asp-controller="Carrinho" asp-route-produtoID="@Model.Produto.ProdutoID" class="btn btn-sm btn-success btn-group-justified btn-comprar">Adicionar ao carrinho</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@if (Model.HistoricosPreco.Count() > 0)
{
    <hr />
    <div class="row">
        <div class="col col-lg-offset-1">
            <a id="btn_historico_preco" class="btn btn-default btn-sm">Histórico de Preço</a>
        </div>
    </div>
    <div class="row historico_preco">
        <div class="col col-lg-offset-1">
            <canvas id="canvas" width="400" height="500"></canvas>
        </div>
    </div>
}
<hr />
@if (Model.Produto.Avaliacoes.Count() > 0)
{
    <div class="row">
        <div class="col col-lg-offset-1">
            <a id="btn_avaliacoes" class="btn btn-default btn-sm">Exibir avalições</a>
        </div>
    </div>
    <hr />
    <div class="row avaliacoes">
        @foreach (var avaliacao in Model.Produto.Avaliacoes)
        {
            <div class="col col-lg-offset-1">
                <div class="aval">
                    <div class="avaliacao">Avaliação Cod.@avaliacao.AvaliacaoID</div>
                    <div>@avaliacao.NomeUsuario</div>
                    <div>@avaliacao.Texto</div>
                    @if (usuarioLogado)
                    {
                        <form class="form-group resposta_avaliacao" asp-action="Responder" asp-controller="Avaliacao" asp-route-url="@ViewContext.HttpContext.Request.PathAndQuery()" asp-route-AvaliacaoID="@avaliacao.AvaliacaoID">
                            <label asp-for="@Model.Avaliacao.Titulo"></label>
                            <input asp-for="@Model.Resposta.Titulo" />
                            <label>Texto</label>
                            <input asp-for="@Model.Resposta.Texto" />
                            <button type="submit" class="btn btn-success btn-sm">Responder</button>
                            <input type="hidden" asp-for="Resposta.ProdutoID" value="@Model.Produto.ProdutoID" />
                            <input type="hidden" asp-for="Avaliacao.AvaliacaoID" value="@avaliacao.AvaliacaoID" />
                        </form>
                    }
                </div>
            </div>
            @if (avaliacao.Respostas != null)
            {
                <div class="col col-lg-offset-2">

                    @foreach (var resposta in avaliacao.Respostas)
                    {
                        <div class="resp">
                            <div>Resposta Cod.@avaliacao.AvaliacaoID</div>
                            <div>@resposta.NomeUsuario</div>
                            <div>@resposta.Texto</div>
                        </div>
                    }
                </div>
            }
            <hr />
        }
    </div>
}
@if (usuarioLogado)
{
    <div class="row">
        <div class="col col-lg-offset-1">
            <button type="button" class="btn btn-success btn-sm" data-toggle="modal" data-target="#exampleModal" data-whatever="@@mdo">Avaliar</button>
        </div>
        <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel">
            <div class="modal-dialog" role="document">
                <form asp-route-url="@ViewContext.HttpContext.Request.PathAndQuery()" asp-action="Avaliar" asp-controller="Avaliacao">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            <h4 class="modal-title" id="exampleModalLabel">Nova avaliação</h4>
                        </div>
                        <div class="modal-body">
                            <div class="form-group">
                                <label asp-for="Avaliacao.Titulo" class="control-label">Titulo:</label>
                                <input asp-for="Avaliacao.Titulo" type="text" class="form-control" />
                            </div>
                            <div class="form-group">
                                <label asp-for="Avaliacao.Texto" class="control-label">Mensagem:</label>
                                <textarea class="form-control" asp-for="Avaliacao.Texto"></textarea>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default btn-sm" data-dismiss="modal">Cancelar</button>
                            <button type="submit" class="btn btn-default btn-sm">Enviar comentário</button>
                            <input type="hidden" asp-for="Avaliacao.ProdutoID" value="@Model.Produto.ProdutoID" />
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
}
@section scripts {
    <script>
    $("#btn_add_carrinho").click(function () {
        var produtoID = @Model.Produto.ProdutoID;
            $.ajax({
                url: '/Carrinho/Adicionara/',
                type: 'POST',
                data: produtoID,
                dataType: 'html',
                success: function (produtoID.) {
                    $(".badge").text(data);
                }
            });
        });
        $(".avaliacoes, .historico_preco").slideToggle(1000);
        $("#btn_avaliacoes").click(function () {
            $(".avaliacoes").slideToggle();
        });
        $("#btn_historico_preco").click(function () {
            $(".historico_preco").slideToggle(500);
                var ctx = document.getElementById("canvas").getContext("2d");
                window.myLine = new Chart(ctx, config);
        });
        var x = @Html.Raw(Json.Serialize(Model.HistoricosPreco));
        var datasAltarecao = [], preco = [];
        for (var i = 0; i < x.length; i++) {
            datasAltarecao.push(new Date(x[i].dataAltarecao).toLocaleDateString());
            preco.push(parseFloat(x[i].precoNovo));
        }
        var ctx = document.getElementById("canvas").getContext('2d');
        ctx.canvas.width = 1000;
        ctx.canvas.height = 500;
        var config = {
            type: 'line',
            data: {
                labels: datasAltarecao,
                datasets: [{
                    label: "Preço",
                    backgroundColor: "red",
                    borderColor: "black",
                    data: preco,
                    fill: false,
                }]
            },
            options: {
                responsive: true,
                title: {
                    display: true,
                    text: 'Histórico de preço'
                },
                tooltips: {
                    mode: 'index',
                    intersect: false,
                },
                hover: {
                    mode: 'nearest',
                    intersect: true
                },
                scales: {
                    xAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'Periodo'
                        }
                    }],
                    yAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'Valor(R$)'
                        },
                        ticks: {
                            max: Math.max.apply(null, preco) + 500
                        }
                    }]
                }
            }
        };
    </script>
}
