// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using StoreEP.Models;
using System;

namespace StoreEP.Migrations.StoreEP
{
    [DbContext(typeof(StoreEPContext))]
    partial class StoreEPContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StoreEP.Models.Address", b =>
                {
                    b.Property<int>("AddressID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City")
                        .IsRequired();

                    b.Property<string>("Country")
                        .IsRequired();

                    b.Property<bool>("GifWrap");

                    b.Property<string>("Line1")
                        .IsRequired();

                    b.Property<string>("Line2")
                        .IsRequired();

                    b.Property<string>("Line3")
                        .IsRequired();

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<string>("State")
                        .IsRequired();

                    b.Property<string>("UserID");

                    b.Property<string>("Zip")
                        .IsRequired();

                    b.HasKey("AddressID");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("StoreEP.Models.CartLine", b =>
                {
                    b.Property<int>("CartLineID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("OrderID");

                    b.Property<int?>("ProdutoID");

                    b.Property<int>("Quantidade");

                    b.HasKey("CartLineID");

                    b.HasIndex("OrderID");

                    b.HasIndex("ProdutoID");

                    b.ToTable("CartLine");
                });

            modelBuilder.Entity("StoreEP.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AddressID");

                    b.Property<bool>("Shipped");

                    b.Property<string>("UserID");

                    b.HasKey("OrderID");

                    b.HasIndex("AddressID");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("StoreEP.Models.Produto", b =>
                {
                    b.Property<int>("ProdutoID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoriaPD")
                        .IsRequired();

                    b.Property<string>("DescricaoPD")
                        .IsRequired();

                    b.Property<string>("Fabricante");

                    b.Property<string>("LinkImagemPD");

                    b.Property<string>("NomePD")
                        .IsRequired();

                    b.Property<decimal>("PrecoPD");

                    b.HasKey("ProdutoID");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("StoreEP.Models.CartLine", b =>
                {
                    b.HasOne("StoreEP.Models.Order")
                        .WithMany("Lines")
                        .HasForeignKey("OrderID");

                    b.HasOne("StoreEP.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoID");
                });

            modelBuilder.Entity("StoreEP.Models.Order", b =>
                {
                    b.HasOne("StoreEP.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressID");
                });
#pragma warning restore 612, 618
        }
    }
}
